apiVersion: apps/v1
kind: Deployment
metadata:
  name: ksqldb-server
spec:
  selector:
    matchLabels:
      service: ksqldb-server
  replicas: 2
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        service: ksqldb-server
    spec:
      containers:
      - env:
        - name: KSQL_LISTENERS
          value: http://0.0.0.0:8088
        - name: KSQL_BOOTSTRAP_SERVERS
          value: kafka-kafka-bootstrap.mailpiece.svc:9092
        - name: KSQL_KSQL_SERVICE_ID
          value: mailpiece
#        - name: KSQL_HEAP_OPTS
#          value: -Xms256M -Xmx1G
        - name: KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE
          value: "true"
        - name: KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE
          value: "true"
#        - name: KSQL_KSQL_CONNECT_URL
#          value: http://kafka-connect-connect-api:8083
#        - name: KSQL_KSQL_QUERIES_FILE
#          value: /data/opt/queries/queries.sql
        image: confluentinc/ksqldb-server:latest
        imagePullPolicy: IfNotPresent
        name: ksqldb-server
        ports:
        - containerPort: 8088
        readinessProbe:
          httpGet:
            path: /healthcheck
            port: 8088
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: 8088
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5        
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
status: {}
---
kind: Service
apiVersion: v1
metadata:
  name: ksqldb-server
spec:
  selector:
    service: ksqldb-server
  type: NodePort
  ports:
    - protocol: TCP
      port: 8088
      nodePort: 30088
